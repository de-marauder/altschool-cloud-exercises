##################################################
# DO Community Playbooks: LAMP on Ubuntu 18.04
##################################################
---

- hosts: webservers
  become: true
  vars_files:
    - vars/default.yml

  tasks:
  # Update package repositories
    - name: "Update Repository cache"
      apt:
        update_cache: yes
        force_apt_get: true

# Configure apache
    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        mode: '0755'

    - name: Set up Apache virtualhost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
      notify: Reload Apache

    - name: Enable new site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      when: disable_default
      notify: Reload Apache


    - name: Make /root/.my.cnf with password credentials
      blockinfile:
        path: /root/.my.cnf
        block: |
          [client]
          user=root
          password={{ mysql_root_password }}

          [mysql]
          user=root
          password={{ mysql_root_password }}

          [mysqldump]
          user=root
          password={{ mysql_root_password }}

          [mysqldiff]
          user=root
          password={{ mysql_root_password }}
        create: yes
      notify: Restart MySQL

    - name: Sets the root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Removes the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

  # UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

  # PHP Info Page
    - name: Sets Up PHP Info Page
      template:
        src: "files/info.php.j2"
        dest: "/var/www/{{ http_host }}/info.php"

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

    - name: Restart MySQL
      service:
        name: mysql
        state: restarted

