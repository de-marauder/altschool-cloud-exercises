############################################################################
# Configure a LAMP server
############################################################################

- hosts: webservers
  become: true
  vars_files:
    - vars/default.yml

  tasks:
  # Update repositories
  - name: Update repository cache
    package:
      update_cache: true

  # Install Server requirements
  - name: Install Server requirements
    package:
      name: [ 'apache2', 'python3-venv', 'libaugeas0' ]
      state: present

  # Install php dependencies
  - name: Installing php dependencies
    package:
      name: ['lsb-release', 'ca-certificates', 'apt-transport-https', 'software-properties-common', 'gnupg2']
      state: present

  - name: Add php repository to package sources
    shell: echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/sury-php.list

  - name: Import php repository key
    shell:
      cmd: wget -qO - https://packages.sury.org/php/apt.gpg | sudo apt-key add -
      warn: false

  # Update repositories
  - name: Update repository cache
    package:
      update_cache: true

  - name: Set timezone
    command: 
      cmd: timedatectl set-timezone "Africa/Lagos"

  - name: Install php
    package:
      name: ['php']
      state: present

  - name: Install php extensions
    package:
      name: ['php-cli', 'php-common', 'php-fpm', 'php-json', 'php-mysql', 'php-zip', 'php-gd', 'php-mbstring', 'php-curl', 'php-xml', 'php-bcmath', 'php-json']
      state: present

  # Install and configure database
  - name: Install mariadb
    package:
      name: ['mariadb-server', 'mariadb-client', 'python3-mysqldb']
      state: present

  - name: Set the root password
    mysql_user:
      name: root
      password: "{{ db_root_password }}"
      update_password: on_create
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - name: Removes all anonymous user accounts
    mysql_user:
      name: ''
      host_all: yes
      state: absent
      login_user: root
      login_password: "{{ db_root_password }}"

  - name: Removes the MySQL test database
    mysql_db:
      name: test
      state: absent
      login_user: root
      login_password: "{{ db_root_password }}"

  # Configure Apache to recognize site
  - name: Import apache configuration file for HTTP
    template:
      src: "files/apache.conf.j2"
      dest: "/etc/apache2/sites-available/{{ http_conf }}"

  - name: Create Index page
    file:
      state: directory
      path: "/var/www/{{ http_host }}"

  - name: Create Index page
    template:
      src: "files/info.php.j2"
      dest: "/var/www/{{ http_host }}/index.php"

  # Enable site
  - name: Enable new site HTTP
    shell: /usr/sbin/a2ensite "{{ http_conf }}"
    notify: Reload Apache

  - name: Disable default Apache site
    shell: /usr/sbin/a2dissite 000-default.conf
    notify: Reload Apache

  - name: Reload Apache
    service:
      name: apache2
      state: reloaded

  # Handlers
  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

    - name: Restart MySQL
      service:
        name: mysql
        state: restarted
